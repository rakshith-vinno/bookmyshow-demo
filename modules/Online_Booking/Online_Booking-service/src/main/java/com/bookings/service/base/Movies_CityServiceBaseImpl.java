/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.bookings.service.base;

import com.bookings.model.Movies_City;
import com.bookings.service.Movies_CityService;
import com.bookings.service.Movies_CityServiceUtil;
import com.bookings.service.persistence.CityPersistence;
import com.bookings.service.persistence.MoviesPersistence;
import com.bookings.service.persistence.Movies_CityPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import java.lang.reflect.Field;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the movies_ city remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.bookings.service.impl.Movies_CityServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.bookings.service.impl.Movies_CityServiceImpl
 * @generated
 */
public abstract class Movies_CityServiceBaseImpl
	extends BaseServiceImpl
	implements IdentifiableOSGiService, Movies_CityService {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Use <code>Movies_CityService</code> via injection or a <code>org.osgi.util.tracker.ServiceTracker</code> or use <code>Movies_CityServiceUtil</code>.
	 */

	/**
	 * Returns the city local service.
	 *
	 * @return the city local service
	 */
	public com.bookings.service.CityLocalService getCityLocalService() {
		return cityLocalService;
	}

	/**
	 * Sets the city local service.
	 *
	 * @param cityLocalService the city local service
	 */
	public void setCityLocalService(
		com.bookings.service.CityLocalService cityLocalService) {

		this.cityLocalService = cityLocalService;
	}

	/**
	 * Returns the city remote service.
	 *
	 * @return the city remote service
	 */
	public com.bookings.service.CityService getCityService() {
		return cityService;
	}

	/**
	 * Sets the city remote service.
	 *
	 * @param cityService the city remote service
	 */
	public void setCityService(com.bookings.service.CityService cityService) {
		this.cityService = cityService;
	}

	/**
	 * Returns the city persistence.
	 *
	 * @return the city persistence
	 */
	public CityPersistence getCityPersistence() {
		return cityPersistence;
	}

	/**
	 * Sets the city persistence.
	 *
	 * @param cityPersistence the city persistence
	 */
	public void setCityPersistence(CityPersistence cityPersistence) {
		this.cityPersistence = cityPersistence;
	}

	/**
	 * Returns the movies local service.
	 *
	 * @return the movies local service
	 */
	public com.bookings.service.MoviesLocalService getMoviesLocalService() {
		return moviesLocalService;
	}

	/**
	 * Sets the movies local service.
	 *
	 * @param moviesLocalService the movies local service
	 */
	public void setMoviesLocalService(
		com.bookings.service.MoviesLocalService moviesLocalService) {

		this.moviesLocalService = moviesLocalService;
	}

	/**
	 * Returns the movies remote service.
	 *
	 * @return the movies remote service
	 */
	public com.bookings.service.MoviesService getMoviesService() {
		return moviesService;
	}

	/**
	 * Sets the movies remote service.
	 *
	 * @param moviesService the movies remote service
	 */
	public void setMoviesService(
		com.bookings.service.MoviesService moviesService) {

		this.moviesService = moviesService;
	}

	/**
	 * Returns the movies persistence.
	 *
	 * @return the movies persistence
	 */
	public MoviesPersistence getMoviesPersistence() {
		return moviesPersistence;
	}

	/**
	 * Sets the movies persistence.
	 *
	 * @param moviesPersistence the movies persistence
	 */
	public void setMoviesPersistence(MoviesPersistence moviesPersistence) {
		this.moviesPersistence = moviesPersistence;
	}

	/**
	 * Returns the movies_ city local service.
	 *
	 * @return the movies_ city local service
	 */
	public com.bookings.service.Movies_CityLocalService
		getMovies_CityLocalService() {

		return movies_CityLocalService;
	}

	/**
	 * Sets the movies_ city local service.
	 *
	 * @param movies_CityLocalService the movies_ city local service
	 */
	public void setMovies_CityLocalService(
		com.bookings.service.Movies_CityLocalService movies_CityLocalService) {

		this.movies_CityLocalService = movies_CityLocalService;
	}

	/**
	 * Returns the movies_ city remote service.
	 *
	 * @return the movies_ city remote service
	 */
	public Movies_CityService getMovies_CityService() {
		return movies_CityService;
	}

	/**
	 * Sets the movies_ city remote service.
	 *
	 * @param movies_CityService the movies_ city remote service
	 */
	public void setMovies_CityService(Movies_CityService movies_CityService) {
		this.movies_CityService = movies_CityService;
	}

	/**
	 * Returns the movies_ city persistence.
	 *
	 * @return the movies_ city persistence
	 */
	public Movies_CityPersistence getMovies_CityPersistence() {
		return movies_CityPersistence;
	}

	/**
	 * Sets the movies_ city persistence.
	 *
	 * @param movies_CityPersistence the movies_ city persistence
	 */
	public void setMovies_CityPersistence(
		Movies_CityPersistence movies_CityPersistence) {

		this.movies_CityPersistence = movies_CityPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService
		getCounterLocalService() {

		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService
			counterLocalService) {

		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService
		getClassNameLocalService() {

		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService
			classNameLocalService) {

		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService
		getClassNameService() {

		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {

		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {

		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService
		getResourceLocalService() {

		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService
			resourceLocalService) {

		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService
		getUserLocalService() {

		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {

		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {

		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		_setServiceUtilService(movies_CityService);
	}

	public void destroy() {
		_setServiceUtilService(null);
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return Movies_CityService.class.getName();
	}

	protected Class<?> getModelClass() {
		return Movies_City.class;
	}

	protected String getModelClassName() {
		return Movies_City.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = movies_CityPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(
				dataSource, sql);

			sqlUpdate.update();
		}
		catch (Exception exception) {
			throw new SystemException(exception);
		}
	}

	private void _setServiceUtilService(Movies_CityService movies_CityService) {
		try {
			Field field = Movies_CityServiceUtil.class.getDeclaredField(
				"_service");

			field.setAccessible(true);

			field.set(null, movies_CityService);
		}
		catch (ReflectiveOperationException reflectiveOperationException) {
			throw new RuntimeException(reflectiveOperationException);
		}
	}

	@BeanReference(type = com.bookings.service.CityLocalService.class)
	protected com.bookings.service.CityLocalService cityLocalService;

	@BeanReference(type = com.bookings.service.CityService.class)
	protected com.bookings.service.CityService cityService;

	@BeanReference(type = CityPersistence.class)
	protected CityPersistence cityPersistence;

	@BeanReference(type = com.bookings.service.MoviesLocalService.class)
	protected com.bookings.service.MoviesLocalService moviesLocalService;

	@BeanReference(type = com.bookings.service.MoviesService.class)
	protected com.bookings.service.MoviesService moviesService;

	@BeanReference(type = MoviesPersistence.class)
	protected MoviesPersistence moviesPersistence;

	@BeanReference(type = com.bookings.service.Movies_CityLocalService.class)
	protected com.bookings.service.Movies_CityLocalService
		movies_CityLocalService;

	@BeanReference(type = Movies_CityService.class)
	protected Movies_CityService movies_CityService;

	@BeanReference(type = Movies_CityPersistence.class)
	protected Movies_CityPersistence movies_CityPersistence;

	@ServiceReference(
		type = com.liferay.counter.kernel.service.CounterLocalService.class
	)
	protected com.liferay.counter.kernel.service.CounterLocalService
		counterLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ClassNameLocalService.class
	)
	protected com.liferay.portal.kernel.service.ClassNameLocalService
		classNameLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ClassNameService.class
	)
	protected com.liferay.portal.kernel.service.ClassNameService
		classNameService;

	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ResourceLocalService.class
	)
	protected com.liferay.portal.kernel.service.ResourceLocalService
		resourceLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.UserLocalService.class
	)
	protected com.liferay.portal.kernel.service.UserLocalService
		userLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.UserService.class
	)
	protected com.liferay.portal.kernel.service.UserService userService;

	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;

}